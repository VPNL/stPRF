function list = getDisplaysList;
% Return a list of the display parameters saved in the VISTADISP
% repository.
%
% list = getDisplayList;
%
% BACKGROUND: The VISTADISP exptTools toolbox saves information about
% displays relevant to different stimulus computer/display combinations.
% These settings are especially important for experiments relying on
% contrast calibration, such as color calibration, but are generally
% useful. 
%
% Display files are saved in the folder returned by 'getDisplayPath'. As of
% 2008, this is in VISTADISP/exptTools2/displays/. 
%
% There are now a couple of formats used for the display files. The older
% convention involves creating a folder with the display name, which
% contains at least one file (displayParams.m) as well as optional
% calibration files (gamma.mat and spectra.mat). In spring 2008, Jon
% Winawer introduced some code to load calibrations directly from the .mat files
% generated by PTB's calibration routines. For better compatibility with
% the PTB code, this is stored within a sub-folder of the display path, in 
% 'PsychCalLocalData'. E.g.:
% 
% VISTADISP/exptTools2/displays/PsychCalLocalData/3T_NEC_800x600.mat
%
% (In addition, there may be a folder in the PsychCalLocalData folder named
% [displayName]displayParams, containing additional parameters in the older
% format. When loading, these additional parameters will be loaded on top
% of the PTB calibration parameters.)
%
% This function looks in both the root display path, and the
% PsychCalLocalData/ subfolder, and returns the names of all valid display
% names in the repository as a cell array.
%
% ras, 07/08/2008.
list = {};
pth1 = getDisplayPath;
pth2 = fullfile(pth1, 'PsychCalLocalData');

%% first look for the old-format displays
w = dir(pth1);
for ii = find( [w.isdir] )
    if exist( fullfile(pth1, w(ii).name, 'displayParams.m'), 'file' )
        list{end+1} = w(ii).name;
    end
end

%% now look for newer-format displays
w = dir(pth2);
for ii = find( [w.isdir] )
    if exist( fullfile(pth1, w(ii).name, 'displayParams.m'), 'file' )
        list{end+1} = w(ii).name;
    end
end

w = what(pth2);
for ii = 1:length(w.mat)
    tmp = load( fullfile(pth2, w.mat{ii}) );
    if isfield(tmp, 'cals')
        [ignore list{end+1}] = fileparts(w.mat{ii});
    end
end

return
